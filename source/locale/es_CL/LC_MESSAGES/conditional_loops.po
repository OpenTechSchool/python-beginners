# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012–2014, OpenTechSchool and contributors
# This file is distributed under the same license as the Introduction to Programming with Python package.
# 
# Translators:
# Patricio Alejandro Urrutia Arestizábal <purrutia@gmail.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: Python for beginners\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-02 06:32+1000\n"
"PO-Revision-Date: 2015-10-01 20:36+0000\n"
"Last-Translator: Matthew Iversen <matthew@opentechschool.org>\n"
"Language-Team: Spanish (Chile) (http://www.transifex.com/opentechschool/python-for-beginners/language/es_CL/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_CL\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../../source/conditional_loops.rst:2
msgid "Conditional Loops"
msgstr "Loops Condicionales"

#: ../../../source/conditional_loops.rst:4
msgid "Introduction"
msgstr "Introducción"

#: ../../../source/conditional_loops.rst:6
msgid ""
"Conditional loops are way to repeat something while a certain condition is "
"satisfied, or **True**. If the condition is always satisfied (never becomes "
"**False**), the loop can become infinite. If the condition starts off false,"
" the code in the loop will never run! In Python conditional loops are "
"defined with the ``while`` statement::"
msgstr "Loops condicionales son la forma de repetir algo mientras se satisfaga cierta condición, o **True**. Si la condición se satisface siempre (nunca se vuelve **False**), el loop se vuelve infinito. Si la condición al inicio es falsa, el código del loop nunca se ejecutará! En Python los loops condicionales se definen con la sentencia ``while``::"

#: ../../../source/conditional_loops.rst:23
msgid "We call this part of the code the 'conditional': ``'.' not in word``"
msgstr "Esta parte del código la llamamos el 'condicional': ``'.' not in word``"

#: ../../../source/conditional_loops.rst:25
msgid ""
"Whether the conditional return True or not determines whether the code "
"inside the ``while`` loop runs."
msgstr "Si el condicional devuelve o no el valor True, determina si el código dentro del loop ``while`` se ejecuta."

#: ../../../source/conditional_loops.rst:28
msgid ""
"Read the code above, and see if you can summarise in your head what it what "
"it do (what its final output will be)."
msgstr "Lea el código de arriba, y vea si puede resumir en su cabeza que es lo que hará (cual será la salida final)."

#: ../../../source/conditional_loops.rst:31
msgid ""
"Then copy it into a file, say :file:`sentence.py` and run it - see exactly "
"what it does. Does that match up with what you thought?"
msgstr "Luego cópielo a un archivo, digamos :file:`sentence.py` y ejecútelo - vea exactamente que hace. ¿Es el comportamiento tal como lo imaginó?"

#: ../../../source/conditional_loops.rst:36
msgid ""
"If you are using Python 2, you will need to replace ``input`` with "
"``raw_input`` to run the program correctly."
msgstr "Si está usando Python 2, necesitará reemplazar ``input```con ``raw_input`` para ejecutar el programa correctamente."

#: ../../../source/conditional_loops.rst:40
msgid "Turtle prison"
msgstr "Prisión Tortuga"

#: ../../../source/conditional_loops.rst:43
#: ../../../source/conditional_loops.rst:89
msgid "Exercise"
msgstr "Ejercicio"

#: ../../../source/conditional_loops.rst:45
msgid ""
"The turtle has been up to its usual tricks again, robbing liquor stores and "
"building up huge gambling debts. It's time for turtle to be put into a cell "
"that it can't get out of."
msgstr ""

#: ../../../source/conditional_loops.rst:49
msgid ""
"Let's make a new version of ``forward()``. One that will turn the turtle "
"around if it tries to go further than 100 from the origin. We'll need a "
"``while`` loop, and some new turtle functions:"
msgstr "Hagamos una nueva versión de ``forward()``. Una que gire la tortuga a la dirección opuesta si trata de ir a más de 100 desde el origen. Necesitaremos un loop ``while``, y algunas funciones nuevas de turtle:"

#: ../../../source/conditional_loops.rst:53
msgid "``turtle.distance(0,0)`` - Distance of the turtle from the origin"
msgstr "``turtle.distance(0,0)`` - Distancia de la tortuga al origen"

#: ../../../source/conditional_loops.rst:54
msgid "``turtle.towards(0,0)`` - The angle to get back to origin"
msgstr "``turtle.towards(0,0)`` - Ángulo para volver al origen"

#: ../../../source/conditional_loops.rst:55
msgid "``turtle.setheading(angle)`` - Directly sets the turtle direction"
msgstr "``turtle.setheading(angle)`` - Establecer dirección de la tortuga"

#: ../../../source/conditional_loops.rst:57
msgid ""
"You could try playing with a turtle in the interpreter and using these "
"functions to check exactly what they do, if you like."
msgstr "Si lo desea, puede intentar jugar con turtle en el intérprete y usar estas funciones para verificar que hacen ellas exactamente."

#: ../../../source/conditional_loops.rst:60
msgid ""
"Now you will need to implement the prison logic using these turtle "
"functions, perhaps a ``while`` loop and a bit of conditional logic. It's a "
"bit of a stretch but keep at it! Don't be afraid to talk it out with a coach"
" or another student."
msgstr "Ahora necesitará implementar la lógica de la prisión usando estas funciones, quizá con un loop ``while`` y un poco de lógica condicional. Es un poco complicado, pero ánimo! No tema consultar con algún profesor u otro estudiante."

#: ../../../source/conditional_loops.rst:68
#: ../../../source/conditional_loops.rst:108
msgid "Solution"
msgstr "Solución"

#: ../../../source/conditional_loops.rst:82
msgid "Draw a spiral"
msgstr "Dibuje una espiral"

#: ../../../source/conditional_loops.rst:84
msgid ""
"Loops can be interrupted with the ``break`` statement. This is especially "
"useful if you write an *infinite loop*, which is a loop where the "
"conditional is always **True**."
msgstr "Loops pueden ser interrumpidos con una sentencia ``break``. Esto es especialmente útil si escribe un *loop infinito*, el cual es un loop donde su condicional es siempre **True**."

#: ../../../source/conditional_loops.rst:91
msgid ""
"Write a ``while`` loop with a condition that is always **True** to draw a "
"spiral. Interrupt the loop when the turtle reaches a certain distance from "
"the center. Use the function ``turtle.distance(x, y)`` to get the turtle's "
"distance to the point defined by the coordinates ``x`` and ``y``."
msgstr "Escriba un loop ``while`` con una condición que sea siempre **verdadera** para dibujar un espiral. Interrumpa el loop cuando la tortuga alcance cierta distancia desde el centro. Use la función ``turtle.distance(x, y)`` para obtener la distancia al punto definido por las coordenadas ``x`` e ``y``."

#: ../../../source/conditional_loops.rst:96
msgid ""
"To do this you will need the ``turtle.xcor()`` and ``turtle.ycor()`` "
"functions, which return the position of the turtle in X and Y axes "
"respectively."
msgstr "Para hacer esto necesitará las funciones ``turtle.xcord()`` y ``turtle.ycord()``, las cuales retornan lka posición de la tortuga en los ejes X e Y respectivamente."

#: ../../../source/conditional_loops.rst:102
msgid ""
"To draw a spiral, the turtle has to rotate by a constant value and move "
"forward by an increasing value."
msgstr "Para dibujar una espiral, la tortuga debe rotar con un valor constante y moverse adelante con un valor que se incremente."

#: ../../../source/conditional_loops.rst:124
msgid "Bonus"
msgstr "Bonus"

#: ../../../source/conditional_loops.rst:126
msgid ""
"Can you make a conditional for this loop, so you don't need the infinite "
"loop ``while True`` or the ``break``? Which version do you find easier to "
"understand?"
msgstr "Puede hacer un condicional para este loop, tal que no necesite un loop infinito ``while True```o la sentencia ``break``? que versión le parece más fácil de entender?"
