# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012–2014, OpenTechSchool and contributors
# This file is distributed under the same license as the Introduction to Programming with Python package.
# 
# Translators:
# Seong-ho Cho <darkcircle.0426@gmail.com>, 2014-2015
msgid ""
msgstr ""
"Project-Id-Version: Python for beginners\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-02 06:32+1000\n"
"PO-Revision-Date: 2015-07-20 13:27+0000\n"
"Last-Translator: Seong-ho Cho <darkcircle.0426@gmail.com>\n"
"Language-Team: Korean (http://www.transifex.com/opentechschool/python-for-beginners/language/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../source/getting_started.rst:2
msgid "Getting started"
msgstr "시작하기"

#: ../../../source/getting_started.rst:5
msgid "What you'll need"
msgstr "필요한 것은"

#: ../../../source/getting_started.rst:8
msgid "A Python!"
msgstr "파이썬이죠~!"

#: ../../../source/getting_started.rst:10
msgid ""
"If you haven't yet got python, the latest official installation packages can"
" be found here:"
msgstr "파이썬을 아직 못 구했다면, 최신 공식 설치 꾸러미를 다음에서 찾을 수 있어요:"

#: ../../../source/getting_started.rst:13
msgid "http://python.org/download/"
msgstr "http://python.org/download/"

#: ../../../source/getting_started.rst:15
msgid "Python 3 is preferable, being the newest version out!"
msgstr "출시된 새 버전으로는 파이썬 3이 적당할 수 있어요!"

#: ../../../source/getting_started.rst:19
msgid ""
"On Windows, you'll want to add :program:`Python` to your path, so it can be "
"found by other programs. To do this, navigate to your installation directory"
" (:file:`C:\\\\Python33\\\\`), open the :file:`Tools`, then :file:`Scripts` "
"folders, and run the :file:`win_add2path.py` file by double clicking on it."
msgstr "윈도우즈에서는, :program:`파이썬`을 경로에 추가하여 다른 프로그램이 찾게 할 수 있어요. 이렇게 하려면 설치 디렉터리를 찾아서(:file:`C:\\\\Python33\\\\`), :file:`Tools` 를 열고, :file: `Scripts`를 연 다음, :file:`win_add2path.py` 파일을 두 번 눌러 실행하세요."

#: ../../../source/getting_started.rst:26
msgid "And a Code Editor"
msgstr "그리고 코드 편집기요"

#: ../../../source/getting_started.rst:28
msgid ""
"A code editor helps with reading and writing programming code. There are "
"many around, and it is one of the most personal choices a programmer can "
"make - Like a tennis-player choosing their racket, or a chef choosing their "
"favourite knife. To start off with, you'll just want a basic, easy-to-use "
"one that doesn't get in your way, but is still effective at writing python "
"code. Here are some suggestions for those:"
msgstr "코드 편집기는 프로그래밍 코드를 읽고 작성하는데 도움을 줘요. 여러가지가 있는데 테니스 선수가 라켓을 고르거나 주방장이 맘에 드는 식칼을 고르는 것처럼 프로그래머가 고를 수 있는 개개인이 가장 많이 선택하는 것이기도 해요. 시작하려면, 기본적이고, 써보지는 못했지만 사용하기 쉬워야 하지만 파이썬 코드 작성에 효율적이어야죠. 몇가지 소개좀 해볼께요:"

#: ../../../source/getting_started.rst:35
msgid ""
"`Sublime Text`_: A great all around editor that's easy to use. It's Ctl+B "
"shortcut lets you run the python file you're working on straight away. Runs "
"on Windows, Mac and Linux."
msgstr "`서브라임 텍스트`_: 편집기 중에서도 사용하기 쉬운 완벽한 편집기예요. Ctrl+B 단축키로 작업중인 파이썬 파일을 바로 실행하게 해줘요. 윈도우즈, 맥, 리눅스에서 동작해요."

#: ../../../source/getting_started.rst:39
msgid ""
"`Geany`_: A simple editor that doesn't aim to be too complicated. Available "
"on Windows and Linux (you can probably find it in your package manager)."
msgstr "`Geany`_: 복잡하지 않음을 목표로한 단순한 편집기예요. 윈도우즈와 리눅스에서 사용할 수 있어요(꾸러미 관리자에서 찾을 수 있을지도 몰라요)."

#: ../../../source/getting_started.rst:42
msgid ""
"`TextMate`_: One of the most famous code editors for Mac, it used to be a "
"paid product but has since been open-sourced."
msgstr "`텍스트메이트`_: 맥용 코드 데이터로는 가장 잘 알려져 있는데요, 유료 제품이지만 소스는 이미 공개되어 있어요."

#: ../../../source/getting_started.rst:45
msgid ""
"`Gedit`_ and `Kate`_: if you run Linux using Gnome or KDE respectively, you "
"might already have one of these two installed!"
msgstr "`Gedit`_ 와 `Kate`_:  그놈이나 KDE 둘 중 하나를 사용하면, 이미 둘 중 하나는 설치되어 있을지도 몰라요!"

#: ../../../source/getting_started.rst:48
msgid ""
"`Komodo Edit`_: a sleak, free editor for Mac, Windows and Linux, based on "
"the more powerful Komodo IDE."
msgstr "`Komodo Edit`_: 좀 강력한 코모도 IDE를 기반으로 하는 뽀대나는 공짜 편집기인데요. 맥용, 윈도우용, 리눅스용이 있어요."

#: ../../../source/getting_started.rst:58
msgid "If you'd like our recommendation, try out Sublime Text first."
msgstr "추천해주는게 좋다면, 먼저 서브라임 텍스트를 써보세요."

#: ../../../source/getting_started.rst:62
msgid ""
"Wordpad, TextEdit, Notepad, and Word are **not** suitable text editors."
msgstr "워드패드, 텍스트에디트, 노드패드, 워드는 텍스트 편집기로 **적당하지 않아요**."

#: ../../../source/getting_started.rst:66
msgid "What is Python, exactly?"
msgstr "그래서 파이썬이 정확하게 뭐라는건가요?"

#: ../../../source/getting_started.rst:68
msgid ""
"Ok, so python is this thing called a **programming language**. It takes text"
" that you've written (usually referred to as **code**), turns it into "
"instructions for your computer, and runs those instructions. We'll be "
"learning how to write code to do cool and useful stuff. No longer will you "
"be bound to use others' programs to do things with your computer!"
msgstr "네, 그래서 파이썬은 **프로그래밍 언어**라고 하는거예요. 여러분이 쓴 텍스트(보통 **코드**라고 해요)를 받아서요, 컴퓨터에 명령으로 바꿔서 전달하고, 이 명령을 실행해줍니다. 앞으로 쌈박하고 쓸모 있는 동작을하는 코드를 어떻게 작성할지 배울거예요. 컴퓨터로 무언가를 하는데 다른 프로그램을 써야 할 일은 앞으로 없을거예요!"

#: ../../../source/getting_started.rst:74
msgid ""
"Practically, Python is just another program on your computer. The first "
"thing to learn is how to use and interact with it. There are in fact many "
"ways to do this; the first one to learn is to interact with python's "
"interpreter, using your **operating system's** (OS) console."
msgstr "실제로, 파이썬은 컴퓨터의 다른 프로그램일 뿐이예요. 먼저 배우게 될건 어떻게 쓰고 다루느냐예요. 사실 다루는덴 여러가지 방법이 있죠. 먼저 배울건 **운영 체제**(OS)의 콘솔을 활용해서 파이선 인터프리터와 대화 하는 방법이예요."

#: ../../../source/getting_started.rst:79
msgid ""
"A **console** (or 'terminal', or 'command prompt') is a *textual* way to "
"interact with your OS, just as the 'desktop', in conjuction with your mouse,"
" is the *graphical* way to interact your system."
msgstr "**콘솔** (또는 '터미널','명령 프롬프트')은 시스템에서 마우스와 결합한 '데스크톱'이 OS와 의사소통을 하는 방식이 *그래픽* 방식인것과 같이, *글자* 방식으로 OS와 의사소통하는 방식이예요."

#: ../../../source/getting_started.rst:84
msgid "Opening a console on Mac OS X"
msgstr "맥 OS X에서 콘솔을 열어보아요"

#: ../../../source/getting_started.rst:86
msgid ""
"OS X's standard console is a program called :program:`Terminal`. Open "
"Terminal by navigating to Applications, then Utilities, then double-click "
"the :program:`Terminal` program. You can also easily search for it in the "
"system search tool in the top right."
msgstr "OS X의 표준 콘솔은 :program:'터미널'이라고 해요. 응용 프로그램, 유틸리티를 들어가서 :program:`터미널`프로그램을 두 번 눌러서 터미널을 여세요. 우측 상단의 시스템 검색 도구를 사용하면 쉽게 찾을 수 있어요."

#: ../../../source/getting_started.rst:91
msgid ""
"The command line Terminal is a tool for interacting with your computer. A "
"window will open with a command line prompt message, something like this::"
msgstr "명령행 터미널은 컴퓨터와 대화하는 도구예요. 다음처럼 명령행 프롬프트 메시지를 띄운 창이 뜰거예요::"

#: ../../../source/getting_started.rst:98
msgid "Opening a console on Linux"
msgstr "리눅스 콘솔을 열어보아요"

#: ../../../source/getting_started.rst:100
msgid ""
"Different linux distributions (e.g Ubuntu, Fedora, Mint) may have different "
"console programs, usually referred to as a terminal. The exact terminal you "
"start up, and how, can depend on your distribution. On Ubuntu, you will "
"likely want to open :program:`Gnome Terminal`. It should present a prompt "
"like this::"
msgstr "제각각의 리눅스 배포판(예: 우분투, 페도라, 민트)은 제각각의 콘솔 프로그램이 있는데요, 보통 터미널이라고 해요. 정확하게 시작하는 터미널이랑 방식은 배포판에 따라 달라요. 우분투에서는 :program:`그놈 터미널`같은걸 열려고 하겠죠. 다음처럼 생긴 프롬프트가 보일거예요::"

#: ../../../source/getting_started.rst:108
msgid "Opening a console on Windows"
msgstr "윈도우즈에서 콘솔을 열어보아요"

#: ../../../source/getting_started.rst:110
msgid ""
"Window's console is called the Command Prompt, named :program:`cmd`.  An "
"easy way to get to it is by using the key combination :kbd:`Windows+R` "
"(:kbd:`Windows` meaning the windows logo button), which should open a "
":guilabel:`Run` dialog.  Then type :program:`cmd` and hit :kbd:`Enter` or "
"click :guilabel:`Ok`. You can also search for it from the start menu. It "
"should look like::"
msgstr "윈도우 콘솔 이름은 :program:`cmd`라고 하고 명령 프롬프트라고 해요. 명령 프롬프트를 불러오는 쉬운 방법은 그냥 단축키 :kbd:`Windows+R`를 써서 (:kbd:`Windows`윈도우 로고 단추를 의미해요), :guilabel:`실행` 대화 상자를 여는거예요. 그 다음 :program:`cmd` 를 입력하고 :kbd:`Enter`키를 치거나 :guilabel:`확인`을 누르세요. 시작 메뉴에서 찾아볼 수도 있어요. 다음과 같은게 떠야해요::"

#: ../../../source/getting_started.rst:119
msgid ""
"Window's Command Prompt is not quite as powerful as its counterparts on "
"Linux and OS X, so you might like to start the Python Interpreter (see just "
"below) directly, or using the IDLE program that Python comes with. You can "
"find these in the Start menu."
msgstr "윈도우 명령 프롬프트는 리눅스나 OS X에서와 같이 강력한건 아닌지라 파이썬 인터프리터를 (아래 처럼) 직접 시작하거나, 파이썬에 딸려오는 IDLE 프로그램을 활용하는게 좋을거예요. 시작 메뉴에서 찾을 수 있어요."

#: ../../../source/getting_started.rst:125
msgid "Using Python"
msgstr "파이선 사용하기"

#: ../../../source/getting_started.rst:127
msgid ""
"The python program that you have installed will by default act as something "
"called an **interpreter**. An interpreter takes commands and runs them as "
"you enter them - very handy for trying things out."
msgstr "설치한 파이선 프로그램은 기본적으로 **인터프리터**라고 하는 것처럼 동작할거예요. 인터프리터는 입력한대로 명령을 받아서 실행해요. 무언가를 해볼때 참 간편하죠."

#: ../../../source/getting_started.rst:131
msgid ""
"Just type :program:`python` at your console, hit :kbd:`Enter`, and you "
"should enter Python's Interpreter."
msgstr "콘솔에서 :program:`python`를 입력하고 :kbd:`Enter`키를 치면, 파이선 인터프리터로 들어가게 돼요."

#: ../../../source/getting_started.rst:134
msgid ""
"To find out which version of python you're running, use ``python -V`` to "
"tell you."
msgstr "실행하는 파이선 버전을 확인해보려면 ``python -V`` 명령을 사용하세요."

#: ../../../source/getting_started.rst:138
msgid "Interacting With Python"
msgstr "파이선을 다루어보아요"

#: ../../../source/getting_started.rst:140
msgid ""
"After Python opens, it will show you some contextual information similar to "
"this::"
msgstr "파이썬을 열면, 다음과 같이 상황 정보가 나타나요::"

#: ../../../source/getting_started.rst:149
msgid ""
"The prompt **>>>** on the last line indicates that you are now in an "
"interactive Python interpeter session, also called the \"Python shell\". "
"**This is different from the normal terminal command prompt!**"
msgstr "마지막 줄의 **>>>** 프롬프트는 대화형 파이선 인터프리터 세션에 있다는걸 보여주는데 이걸 \"파이썬 쉘\" 이라고 해요. **보통 터미널 명령 프롬프트와는 달라요!**"

#: ../../../source/getting_started.rst:153
msgid "You can now enter some python code. Try::"
msgstr "몇가지 파이선 코드를 입력할 수 있어요. 해보세요::"

#: ../../../source/getting_started.rst:157
msgid ""
"Press :kbd:`Enter` and see what happens. After showing the results, Python "
"will bring you back to the interactive prompt, where you could enter another"
" command:"
msgstr ":kbd:`Enter`키를 눌러 어떤 일이 일어나는지 보세요. 결과를 표시하고 나면 파이썬에서는 다른 명령을 입력할 수 있는 대화 프롬프트로 돌아갑니다."

#: ../../../source/getting_started.rst:166
msgid ""
"An extremely useful command is ``help()``, which enters a help functionality"
" to explore all the stuff python lets you do, right from the interpreter. "
"Press :kbd:`q` to close the help window and return to the Python prompt."
msgstr "상당히 쓸모있는 명령은 ``help()`` 인데요, 도움말 기능으로 들어가서 동작해보려는 파이선의 모든 요소를 탐색하고 결과를 인터프리터에 바로 뿌려줘요. :kbd:`q`를 입력하면 도움말 창을 닫고 파이썬 프롬프트로 돌아가요."

#: ../../../source/getting_started.rst:170
msgid ""
"To leave the interactive shell, press :kbd:`Ctrl-Z` and then :kbd:`Enter` on"
" Windows, or :kbd:`Ctrl-D` on OS X or Linux. Alternatively, you could also "
"run the python command ``exit()``!"
msgstr "대화형 쉘을 나가려면 :kbd:`Ctrl-Z`를 누르고, 윈도우에서는 :kbd:`Enter`, OS X나 리눅스에서는 :kbd:`Ctrl-D`를 누르세요. 대신 파이선 명령 ``exit()``를 실행할 수도 있어요!"

#: ../../../source/getting_started.rst:175
msgid "Running Python files"
msgstr "파이썬 파일 실행"

#: ../../../source/getting_started.rst:177
msgid ""
"When you have a lot of python code to run, you will want to save it into a "
"file so, for instance, you can modify small parts of it (fix a bug) and re-"
"run it without having to repeatedly re-type the rest. Instead you can save "
"your code to a file and pass a file name to the :program:`python` "
"executable. It will execute that file instead of launching the interactive "
"interpreter."
msgstr "실행할 많은 파이선 코드가 있으면 파일로 저장할 수 있는데요, 가령 코드 일부를 고칠 수 있고요(버그 고치기), 나머지 부분을 다시 반복해서 입력하지 않아도 실행할 수 있어요. 대신 파일에 코드를 저장할 수 있고요, :program:`python`에서 실행할 수 있게 파일 이름을 전달할 수 있어요. 대화형 인터프리터를 실행하는 대신에 파일을 바로 실행해줘요."

#: ../../../source/getting_started.rst:184
msgid ""
"**Let's try that**.  Create a file :file:`hello.py` in your current "
"directory with your favorite text editor and write the print command from "
"above.  Now save that file. On Linux or OS X, you can also run ``touch "
"hello.py`` to create an empty file to edit. To run this file with python, "
"it's pretty easy:"
msgstr "**다음을 해보기로 하죠**. :file:`hello.py` 파일을 즐겨 사용하는 텍스트 편집기로 현재 디렉터리에 만들고 위에 작성한 프린트 명령을 작성해보세요. 이제 파일을 저장하세요. 리눅스나 OS X에서는 ``touch hello.py``를 실행해서 편집할 빈 파일을 만들 수 있어요. 파이썬으로 파일을 실행한다면, 굉장히 쉬워요:"

#: ../../../source/getting_started.rst:195
msgid ""
"Make sure you are at your system command prompt, which will have ``$`` or "
"``>`` at the end, not at python's (which has ``>>>`` instead)!"
msgstr "마지막에  파이선 프롬프트가 아니라(```>>>``` 표시가 있어요), ``$``나 ``>``가 있는 시스템 명령 프롬프트에 있는지 확인해보세요!"

#: ../../../source/getting_started.rst:198
msgid ""
"On Windows you should also be able to double-click the Python file to run "
"it."
msgstr "윈도우에서는 파이선 파일을 두 번 눌러서 실행할 수 있어요."

#: ../../../source/getting_started.rst:200
msgid ""
"When pressing :kbd:`Enter` now, the file is executed and you see the output "
"as before.  But this time, after Python finished executing all commands from"
" that file it exits back to the system command prompt, instead of going back"
" to the interactive shell."
msgstr "이제 :kbd:`Enter` 키를 누르면, 파일을 실행하고 이전에 본 출력 내용을 볼 수 있어요, 근데 지금은 파이썬이 파일에 있는 모든 명령을 다 실행한 다음에 대화 쉘로 돌아가는 대신, 시스템 명령 프롬프트로 빠져나와요."

#: ../../../source/getting_started.rst:205
msgid "And now we are all set and can get started with turtle!"
msgstr "그리고 이제 더 설정했으니 거북이를 가지고 시작해보기로 하죠!"

#: ../../../source/getting_started.rst:209
msgid ""
"Not getting \"Hello world\" but some crazy error about \"can't open file\" "
"or \"No such file or directory?\" Your command line might not be running in "
"the directory you saved the file in. You can use the system command line to "
"change your active directory with the :command:`cd` command, which stands "
"for \"change directory\". On Windows, you might want something like::"
msgstr "\"Hello world\"가 뜨지 않고 \"can't open file\" 또는 \"No such file or directory\"같은 미치게 만드는 오류가 뜨나요? 파일을 저장한 디렉터리에서 실행이 안될 수도 있어요. 시스템 명령 줄에서 :command:`cd` 명령을 사용해서 현재 활성 디렉터리를 바꿀 수 있어요. 이 명령은 \"change directory\"를 의미해요. 윈도우에서는 다음과 같이 되겠죠::"

#: ../../../source/getting_started.rst:218
msgid "On Linux or OS X, you might want something like:"
msgstr "리눅스나 OS X에서는 다음 처럼 나타날거예요:"

#: ../../../source/getting_started.rst:224
msgid ""
"This changes to the directory Python_Exercises under the Desktop folder "
"(yours might be somewhere a bit different). If you don't know the location "
"of the directory where you saved the file, you can simply drag the directory"
" to the command line window.  If you don't know which directory your shell "
"is currently running in use :command:`pwd`, which stands for \"print working"
" directory\"."
msgstr "이 명령으로 Desktop 폴더의 Python_Exercises 디렉터리로 바뀌어요(어디에 있느냐에 따라 다를 수도 있어요). 파일을 어디에 저장하는디 디렉터리 위치를 모르겠다면 그냥 디렉터리를 명령행 창에 끌어다 넣으세요. 쉘이 돌아가는 디렉터리의 위치가 어딘지 잘 모르겠다면 \"print working directory\"를 의미하는 :command:`pwd` 명령을 활용하세요."

#: ../../../source/getting_started.rst:233
msgid ""
"When playing around with turtle, avoid naming your file :file:`turtle.py` "
"--- rather use more appropriate names such as :file:`square.py` or "
":file:`rectangle.py`.  Otherwise, whenever you refer to ``turtle``, Python "
"will pick up *your* file instead of the standard turtle."
msgstr "거북이를 가지고 놀 때, :file:`turtle.py` 파일 이름으로 저장하는건 피해주세요. 대신 :file:`square.py` 또는 :file:`rectangle.py`같은 적당한 이름으로 지어주세요. 그렇지 않으면 ``turtle``을 참조할 때, 파이썬에서는 기존의 거북이 대신 *여러분*의 파일을 가져와요."
