# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012–2014, OpenTechSchool and contributors
# This file is distributed under the same license as the Introduction to Programming with Python package.
# 
# Translators:
# Seong-ho Cho <darkcircle.0426@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: Python for beginners\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-09 11:00+1000\n"
"PO-Revision-Date: 2014-02-22 21:53+0000\n"
"Last-Translator: Seong-ho Cho <darkcircle.0426@gmail.com>\n"
"Language-Team: Korean (http://www.transifex.com/projects/p/python-for-beginners/language/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# b150007b79954d7fb717a2021047a018
#: ../../../source/functions.rst:2
msgid "User-defined functions"
msgstr "사용자가 정의한 함수"

# 4b91eb2e343245bdafc83a201b4cb9bd
#: ../../../source/functions.rst:5
msgid "Introduction"
msgstr "소개"

# 9b9ab659411949de99730371121cb25b
#: ../../../source/functions.rst:7
msgid ""
"Programmers can deal with some pretty complex and abstract problems, but one"
" sign of a good programmer is that they're lazy. They only like to deal with"
" one thing at a time. So you need a way to break up problems into smaller, "
"discrete pieces, which lets you focus on just the piece you want to."
msgstr ""

# 404bea48f9bc46d2813d46addf44959e
#: ../../../source/functions.rst:12
msgid ""
"Functions are one way to do this abstraction in Python. Let's take "
"``turtle.reset()`` for example. ``reset`` is a function we call on our "
"``turtle``, and it is actually an abstraction for a number of steps, namely:"
msgstr ""

# 95b43e89f9fb450788340fb8d3b687ac
#: ../../../source/functions.rst:16
msgid "Erase the drawing board."
msgstr "그림판을 지우세요."

# 69026f435e2648b187a57a6fbc744888
#: ../../../source/functions.rst:17
msgid "Set the width and color back to default."
msgstr ""

# 39e401c2f9be4718b22a5bbe8b5dc0c4
#: ../../../source/functions.rst:18
msgid "Move the turtle back to its initial position."
msgstr ""

# 28843546bf054acfb46700b3cb1fdd9c
#: ../../../source/functions.rst:20
msgid ""
"But because all the code is contained in the function, we don't have to "
"worry about these details. We can simply *call* this function, and know it "
"will do what it says for us."
msgstr ""

# 8fdfa9923176412cadacf83a1664f694
#: ../../../source/functions.rst:23
msgid "So - how to write your own?"
msgstr "그래서 함수를 어떻게 작성하실건가요?"

# 69c11ba77acb4ea791f814c7002a2f12
#: ../../../source/functions.rst:25
msgid "A function can be defined with the ``def`` keyword in Python::"
msgstr ""

# 314812d30924445db5b2d4b0819a1c50
#: ../../../source/functions.rst:31
msgid ""
"This function we defined is called ``line_without_moving`` and it is an "
"abstraction for two turtle steps - a move forward and a move backward."
msgstr ""

# 0c74c1724be441dfa6c83b8278fecf95
#: ../../../source/functions.rst:35
msgid ""
"To use it (or as it is usually called, \"to call it\"), write its name "
"followed by parentheses::"
msgstr ""

# 69311372184e4800abc763ffdc315963
#: ../../../source/functions.rst:46
msgid "We could write more functions to remove some of the repetition::"
msgstr ""

# 4ada32fa325f453495f4067beee03d9e
#: ../../../source/functions.rst:57
msgid ""
"Python uses *indenting with whitespace* to identify blocks of code that "
"belong together. In Python a block (like the function definitions shown "
"above) is introduced with a colon at the end of the line and subsequent "
"commands are indented --- usually 4 spaces further in. The block ends with "
"the first line that isn't indented."
msgstr ""

# 9e6798a941ca4e21a1fcdafaf48c807b
#: ../../../source/functions.rst:63
msgid ""
"This is different to many other programming languages, which use special "
"characters (like curly braces ``{}``) to group blocks of code together."
msgstr ""

# a08e7ef4dea9447092c9c3b3e41bc6c1
#: ../../../source/functions.rst:67
msgid ""
"Never use tab characters to indent your blocks, only spaces. You can -- and "
"should -- configure your editor to put 4 spaces when you press the tab key. "
"The problem with using tab characters is that other python programmers use "
"spaces, and if both are used in the same file python will read it wrong (in "
"the best place, it will complain, and in the worst case, weird, hard to "
"debug bugs will happen)."
msgstr ""

# 5b6014e131e743e6a40523ad6786ea09
#: ../../../source/functions.rst:76
msgid "A function for a square"
msgstr "사각형을 그리는 함수"

# dfcd47ffdcd944f48f11ec1987a6cc09
# c2ed3ecc64eb45c6918e57601759bb25
#: ../../../source/functions.rst:79 ../../../source/functions.rst:120
msgid "Exercise"
msgstr "연습"

# b38e221085f54216babbe3532f9afd6d
#: ../../../source/functions.rst:81
msgid ""
"Write a function that draws a square. Could you use this function to improve"
" the tilted squares program? If you change the program to use a function, is"
" it easier to experiment with?"
msgstr "사각형을 그리는 함수를 작성해보세요. 사각형을 기울이는 프로그램에 이 함수를 사용할 수 있을까요? 함수를 사용하는 프로그램을 바꾸면 쉽게 실험할 수 있을까요?"

# 177b659f93b540eab20425cadefd5b40
# 0cd1ab494fb540e5ae3dd94d3a7d469b
#: ../../../source/functions.rst:88 ../../../source/functions.rst:142
msgid "Solution"
msgstr "해결책"

# d22ac731cdfb40a381277b47faefded0
#: ../../../source/functions.rst:117
msgid "A function for a hexagon"
msgstr "육각형 그리기 함수"

# ab71af3d201f4cf0a0f016b60653f397
#: ../../../source/functions.rst:122
msgid "Write a function that draws a hexagon."
msgstr "육각형을 그리는 함수를 작성하세요."

# 13452cd00bab458caafcf98f8ae88c9b
#: ../../../source/functions.rst:126
msgid ""
"Now combine that function into a honeycomb. Just make it with a single layer"
" like this:"
msgstr "이제 이 함수를 벌집에 합쳐보세요. 다음과 같이 단일 층으로 만드세요."

# 58233cc905a449afa1d1365343d0643c
#: ../../../source/functions.rst:130
msgid "Give it a good go!"
msgstr ""

# 0884a8c94ade405082054e7c977e239b
#: ../../../source/functions.rst:134
msgid ""
"Make sure your hexagon function returns your turtle to exactly the same "
"position and angle it was before it was asked to draw the hexagon. This "
"makes it easier to reason about."
msgstr ""

# 8189b95016014d53a1fc92fee3f93dad
#: ../../../source/functions.rst:156
msgid ""
"You could also put the ``turtle.forward(100); turtle.right(60)`` portion in "
"the function, but you better not call it ``hexagon`` in that case.  That's "
"misleading because it actually draws a hexagon and then advances to a "
"position where another hexagon would make sense in order to draw a "
"honeycomb.  If you ever wanted to reuse your hexagon function outside of "
"honeycombs, that would be confusing."
msgstr ""
