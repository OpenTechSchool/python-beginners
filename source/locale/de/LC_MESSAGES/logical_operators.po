# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012–2014, OpenTechSchool and contributors
# This file is distributed under the same license as the Introduction to Programming with Python package.
# 
# Translators:
# Kristian Rother <krother@academis.eu>, 2013
# Robert Lehmann <transifex@robertlehmann.de>, 2013
# Benjamin Kampmann <ben@opentechschool.org>, 2013
# Robert Lehmann <transifex@robertlehmann.de>, 2014
msgid ""
msgstr ""
"Project-Id-Version: Python for beginners\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-09 11:00+1000\n"
"PO-Revision-Date: 2014-02-24 23:06+0000\n"
"Last-Translator: Robert Lehmann <transifex@robertlehmann.de>\n"
"Language-Team: German (http://www.transifex.com/projects/p/python-for-beginners/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 2f20df833f124f9c85714161761b61a0
#: ../../../source/logical_operators.rst:2
msgid "Logical operators"
msgstr "Logische Operatoren"

# f311ca6659b4437e989dee0b026e81c5
#: ../../../source/logical_operators.rst:5
msgid "Introduction"
msgstr "Einführung"

# a64bdf21929b492493f49955995ab7bc
#: ../../../source/logical_operators.rst:7
msgid ""
"Conditionals are a nice way to make decisions by asking if something equals "
"*True* or not. But often one condition is not enough. We may want to take "
"the opposite of our result. Or for instance if we want to make a decision "
"upon ``turtle.xcor()`` and ``turtle.ycor()`` we have to combine them. This "
"can be done with logical operators."
msgstr "Verzweigungen sind ein guter Weg um im Programm Entscheidungen zu treffen, indem geprüft wird ob etwas *True* ist oder nicht. Aber häufig reicht eine Bedingung allein nicht aus. Vielleicht möchtest Du auch das Gegenteil Deines Ergebnisses prüfen. Oder falls Du eine Entscheidung aufgrund von ``turtle.xcor()`` und ``turtle.ycor()`` treffen möchtest, musst Du beide verknüpfen. Das kannst Du mit logischen Operatoren erreichen."

# 91aa730b80734d2486904a10e87f6973
#: ../../../source/logical_operators.rst:14
msgid "Negation of a statement"
msgstr "Verneinung eines Ausdrucks"

# 16dd9203364c46d3a5f8c59cd8891fb2
#: ../../../source/logical_operators.rst:16
msgid ""
"If we want something to be *False* we can use ``not``. It is a logical "
"operator::"
msgstr "Wenn wir möchten, dass etwas *False* ist, können wir den logischen Operator ``not`` verwenden::"

# 98497a179d5d4026bd2f78d00bef5db5
# 13525c7015f848e89385f50b6344f0e5
#: ../../../source/logical_operators.rst:26
#: ../../../source/logical_operators.rst:66
msgid "Exercise"
msgstr "Übung"

# 35d690f787ac4b7a94541491e7069e38
#: ../../../source/logical_operators.rst:28
msgid ""
"The turtle gives us a useful function to know if it is drawing or not: "
"``turtle.isdown()``.  This function returns *True* if the turtle is drawing."
" As we have seen earlier, the function ``turtle.penup()`` and "
"``turtle.pendown()`` toggle between drawing while moving, or just moving "
"without a trace."
msgstr "Die Schildkröte enthält eine nützliche Funktion die sagt ob grade gezeichnet wird oder nicht; ``turtle.isdown()``. Diese Funktion liefert *True* falls die Schildkröte im Zeichenmodus ist. Wie wir bereits gesehen haben, schalten die Funktionen ``turtle.penup()`` und ``turtle.pendown()`` zwischen dem Modus zum Zeichnen beim Bewegen und dem Bewegungsmodus ohne Zeichnen hin und her."

# 3d050f537f894d0092f7bc4ebb7aecc0
#: ../../../source/logical_operators.rst:33
msgid "Can we write a function that only goes forward if the pen is up?"
msgstr "Können wir eine Funktion schreiben die nur vorwärts geht falls die Schildkröte nicht im Zeichenmodus ist?"

# 8ec37a98bbce4ccd9ce82d3d6657f779
# 79c8613a80fb446d937f63207d57126b
#: ../../../source/logical_operators.rst:38
#: ../../../source/logical_operators.rst:75
msgid "Solution"
msgstr "Lösung"

# 479b73f64ea14a6984e626cfb3c1b620
#: ../../../source/logical_operators.rst:48
msgid "This and that or something else"
msgstr "Dies und jenes oder etwas anderes"

# d77af2e96f3840fe90850c25a0981881
#: ../../../source/logical_operators.rst:50
msgid ""
"Two easy to understand operators are ``and`` and ``or``. They do exactly "
"what they sound like:::"
msgstr "Zwei einfach zu verstehende Operatoren sind ``and`` und ``or``. Sie tun genau das wonach sie sich anhören:::"

# a1e51836541b45ea81132528be3d7323
#: ../../../source/logical_operators.rst:62
msgid ""
"You are not restricted to one logical operator. You can combine as may as "
"you want."
msgstr "Du bist nicht darauf angewiesen nur einen logischen Operator zu verwenden. Du kannst so viele miteinander kombinieren wie Du möchtest."

# 8b46de8719184531b8b89b8a50b410d8
#: ../../../source/logical_operators.rst:68
msgid ""
"Earlier we put the turtle in a circular prison. This time let's make it a "
"box. If the turtle goes more than 100 in the X *or* Y axis then we turn the "
"turtle back around to the center."
msgstr "Weiter oben haben wir die Schildkröte in einem kreisförmigen Gefängnis eingesperrt. Diesmal werden wir ein Quadrat dazu verwenden. Falls die Schildkröte sich mehr als 100 Einheiten entlang der x- *oder* y-Achse vom Mittelpunkt entfernt, drehen wir sie zurück zur Mitte um."
